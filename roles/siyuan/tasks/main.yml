---
- name: Start Siyuan
  block:
  - name: Create Siyuan Directories
    ansible.builtin.file:
      path: "{{ item }}"
      state: directory
      owner: "{{ ansible_user }}"
      group: "{{ ansible_user }}"
      mode: "0755"
    with_items:
      - "{{ siyuan_data_directory }}"
      - "{{ siyuan_data_directory }}/workspace"
  - name: siyuan Docker Container
    community.docker.docker_container:
      name: "{{ siyuan_container_name }}"
      image: b3log/siyuan:v2.9.7
      networks:
        - name: homelab
      volumes:
        - "{{ siyuan_data_directory }}/workspace:/siyuan/workspace"
      env:
        TZ: "{{ timezone }}"
      command:
        - "--workspace=/siyuan/workspace"
      user: "1000:1000"
      labels:
        traefik.enable: "true"
        traefik.http.routers.siyuan.rule: "Host(`siyuan.{{ traefik_domain_name }}`) || Host(`siyuan.{{ cloudflared_tunnel_domain_name }}`)"
        traefik.http.routers.siyuan.entrypoints: "websecure"
        traefik.http.routers.siyuan.middlewares: "gzip"
        traefik.http.routers.siyuan.tls.certresolver: "myresolver"
        traefik.http.services.siyuan.loadbalancer.server.port: "6806"
        traefik.http.routers.siyuan-ws.rule: "Host(`siyuan.{{ traefik_domain_name }}`) && PathPrefix(`/ws`) || Host(`siyuan.{{ cloudflared_tunnel_domain_name }}`) && PathPrefix(`/ws`)"
        traefik.http.routers.siyuan-ws.entrypoints: "websecure"
        traefik.http.routers.siyuan-ws.middlewares: "gzip"
        traefik.http.routers.siyuan-ws.tls.certresolver: "myresolver"
        # traefik.http.services.siyuan-ws.loadbalancer.server.port: "6806"
      restart_policy: unless-stopped
  when: siyuan_enabled is true

- name: Stop Siyuan
  block:
    - name: Stop Siyuan
      community.docker.docker_container:
        name: "{{ siyuan_container_name }}"
        state: absent
  when: siyuan_enabled is false
