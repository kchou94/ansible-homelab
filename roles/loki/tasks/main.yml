---
- name: Start loki
  block:
  - name: Create Loki Directories
    ansible.builtin.file:
      path: "{{ item }}"
      state: directory
      owner: "{{ ansible_user }}"
      group: "{{ ansible_user }}"
      mode: "0755"
    with_items:
      - "{{ loki_data_directory }}"
      - "{{ loki_data_directory }}/config"
      - "{{ loki_data_directory }}/rules"
      - "{{ loki_data_directory }}/chunks"
  - name: Template Loki loki.yaml
    ansible.builtin.template:
      src: loki.yaml
      dest: "{{ loki_data_directory }}/config/loki.yaml"
      mode: "0755"
    register: loki_template_config
  - name: Template Loki rules.yml
    ansible.builtin.template:
      src: rules.yml
      dest: "{{ loki_data_directory }}/rules"
      mode: "0755"
    register: loki_rules_template_config
  - name: Loki Read Docker Container
    community.docker.docker_container:
      name: "{{ loki_read_container_name }}"
      image: grafana/loki:2.8.3
      networks:
        - name: homelab
      command:
        - "-config.file=/etc/loki/loki.yaml"
        - "-target=read"
      volumes:
        - "{{ loki_data_directory }}/config:/etc/loki"
        - "{{ loki_data_directory }}/rules:/loki/rules:ro"
      env:
        TZ: "{{ timezone }}"
      restart_policy: unless-stopped
      recreate: "{{ loki_template_config is changed }}"
  - name: Loki Write Docker Container
    community.docker.docker_container:
      name: "{{ loki_write_container_name }}"
      image: grafana/loki:2.8.3
      networks:
        - name: homelab
      command:
        - "-config.file=/etc/loki/loki.yaml"
        - "-target=write"
      volumes:
        - "{{ loki_data_directory }}/config:/etc/loki"
        - "{{ loki_data_directory }}/chunks:/loki/chunks"
      env:
        TZ: "{{ timezone }}"
      restart_policy: unless-stopped
      recreate: "{{ loki_template_config is changed }}"
  - name: Loki Backend Docker Container
    community.docker.docker_container:
      name: "{{ loki_backend_container_name }}"
      image: grafana/loki:2.8.3
      networks:
        - name: homelab
      command:
        - "-config.file=/etc/loki/loki.yaml"
        - "-target=backend"
        - "-legacy-read-mode=false"
      volumes:
        - "{{ loki_data_directory }}/config:/etc/loki"
      env:
        TZ: "{{ timezone }}"
      restart_policy: unless-stopped
      recreate: "{{ loki_template_config is changed }}"
  - name: Template Loki gateway nginx.conf
    ansible.builtin.template:
      src: nginx.conf
      dest: "{{ loki_data_directory }}/config/nginx.conf"
      mode: "0755"
    register: template_config
  - name: Loki Gateway Docker Container
    community.docker.docker_container:
      name: "{{ loki_gateway_container_name }}"
      image: nginx:1.25
      networks:
        - name: homelab
      volumes:
        - "{{ loki_data_directory }}/config/nginx.conf:/etc/nginx/nginx.conf:ro"
      env:
        TZ: "{{ timezone }}"
      labels:
        traefik.enable: "true"
        traefik.http.routers.loki.rule: "Host(`loki.{{ traefik_domain_name }}`)"
        traefik.http.routers.loki.entrypoints: "websecure"
        traefik.http.routers.loki.middlewares: "gzip"
        traefik.http.routers.loki.tls.certresolver: "myresolver"
        traefik.http.services.loki.loadbalancer.server.port: "80"
      restart_policy: unless-stopped
      recreate: "{{ template_config is changed }}"
  when: loki_enabled is true

- name: Stop loki
  block:
    - name: Stop loki
      community.docker.docker_container:
        name: "{{ loki_gateway_container_name }}"
        state: absent
    - name: Stop loki
      community.docker.docker_container:
        name: "{{ loki_read_container_name }}"
        state: absent
    - name: Stop loki
      community.docker.docker_container:
        name: "{{ loki_write_container_name }}"
        state: absent
    - name: Stop loki
      community.docker.docker_container:
        name: "{{ loki_backend_container_name }}"
        state: absent
  when: loki_enabled is false
